server.port = 8085

# mariaDB
spring.application.name=SpringBootJdbc
spring.datasource.driverClassName=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://braverokmc79.cafe24.com:3306/example?characterEncoding=utf8
spring.datasource.username=example
spring.datasource.password=example123

#mybatis 쿼리 실행 보기 
#spring.datasource.driverClassName=net.sf.log4jdbc.DriverSpy
#spring.datasource.url=jdbc:log4jdbc:mariadb://braverokmc79.cafe24.com:3306/example?characterEncoding=utf8


#spring.datasource.url=jdbc:h2:~/slipp;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.datasource.username=sa
#spring.datasource.password=



#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.hibernate.ddl-auto = update
#spring.h2.console.enabled = true 
#spring.h2.console.settings.trace=true 
#spring.h2.console.settings.web-allow-others=true
#spring.mustache.expose-session-attributes=true



spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp
spring.mvc.static-path-pattern=/resources/**




# 로그 설정  DEBUG < INFO 
#실제 실행시 파일로 출력될 레벨
logging.level.org.springframework=INFO
logging.level.com.howtodoinjava=DEBUG
logging.level.org.hibernate= ERROR

#output to a temp_folder/file  /폴더 및 파일이 없으면 자동으로 생성
logging.file=/home/springboot-log/application.log
#logging.file=${java.io.tmpdir}/application.log
# Logging pattern for the console
#logging.pattern.console= %d{yyyy-MM-dd HH:mm:ss} - %msg%n
# Logging pattern for file
#logging.pattern.file= %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%

#spring.output.ansi.enabled value to either ALWAYS, NEVER or DETECT. 색깔설정
#spring.output.ansi.enabled=DETECT 

#만약 커스텀한 로그파일의 위치를 변경하고 싶다면 logging.config 프로퍼티를 사용하면 된다.
#예를 들어 /resources/logback/logback.xml 에 위치 하고 싶다면
#logging.config=classpath:logback/logback.xml
logging.config:classpath:logback-spring.xml




#에러페이지 설정
server.error.whitelabel.enabled=false



